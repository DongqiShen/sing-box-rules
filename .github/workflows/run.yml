name: Generate RULE-SET for Premium Edition of Sing-box
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow GitHub Token to write to Release

    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "custom_icloud=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/icloud.txt" >> $GITHUB_ENV
          echo "custom_tld_not_cn=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/tld-!cn.txt" >> $GITHUB_ENV
          echo "custom_private=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/private.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_reject=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_proxy=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_direct=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_gfw=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/gfw.txt" >> $GITHUB_ENV
          echo "Loyalsoldier_greatfire=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/greatfire.txt" >> $GITHUB_ENV
          echo "felixonmars_apple=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> $GITHUB_ENV
          echo "felixonmars_google=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf" >> $GITHUB_ENV
          echo "cn_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/cn.txt" >> $GITHUB_ENV
          echo "lan_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/private.txt" >> $GITHUB_ENV
          echo "telegram_cidr=https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/telegram.txt" >> $GITHUB_ENV
        shell: bash

      - name: Generate icloud.json file
        run: |
          curl -sSL ${custom_icloud} | grep -E "^(full|domain):" | awk -F ':' '{print "  \"" $2 "\","}' > temp.txt
          sed -i '$ s/,$//' temp.txt # Remove trailing comma
          echo '{"version": 1, "rules": [{"domain_suffix": [' > icloud.json
          cat temp.txt >> icloud.json
          echo ']}]}' >> icloud.json
          rm temp.txt

      - name: Generate google.json file
        run: |
          curl -sSL ${felixonmars_google} | perl -ne '/^server=\/([^\/]+)\// && print "  \"$1\",\n"' > temp.txt
          sed -i '$ s/,$//' temp.txt
          echo '{"version": 1, "rules": [{"domain_suffix": [' > google.json
          cat temp.txt >> google.json
          echo ']}]}' >> google.json
          rm temp.txt

      - name: Generate apple.json file
        run: |
          curl -sSL ${felixonmars_apple} | perl -ne '/^server=\/([^\/]+)\// && print "  \"$1\",\n"' > temp.txt
          sed -i '$ s/,$//' temp.txt
          echo '{"version": 1, "rules": [{"domain_suffix": [' > apple.json
          cat temp.txt >> apple.json
          echo ']}]}' >> apple.json
          rm temp.txt

      - name: Generate private.json file
        run: |
          curl -sSL ${custom_private} | awk -F ':' '/^full:/ {print "  \"" $2 "\","}' > temp_full.txt
          curl -sSL ${custom_private} | awk -F ':' '/^domain:/ {print "  \"" $2 "\","}' > temp_suffix.txt
          sed -i '$ s/,$//' temp_full.txt
          sed -i '$ s/,$//' temp_suffix.txt
          echo '{"version": 1, "rules": [{' > private.json
          echo '"domain": [' >> private.json
          cat temp_full.txt >> private.json
          echo '],' >> private.json
          echo '"domain_suffix": [' >> private.json
          cat temp_suffix.txt >> private.json
          echo ']}]}' >> private.json
          rm temp_full.txt temp_suffix.txt

      - name: Generate direct.json file
        run: |
          curl -sSL ${Loyalsoldier_direct} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(full:)([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "  \"$2\",\n"' > temp_full.txt
          curl -sSL ${Loyalsoldier_direct} | grep -Ev "^(regexp|keyword|full):" | perl -ne '/^(domain:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "  \"$2\",\n"' > temp_suffix.txt
          sed -i '$ s/,$//' temp_full.txt
          sed -i '$ s/,$//' temp_suffix.txt
          echo '{"version": 1, "rules": [{' > direct.json
          echo '"domain": [' >> direct.json
          cat temp_full.txt >> direct.json
          echo '],' >> direct.json
          echo '"domain_suffix": [' >> direct.json
          cat temp_suffix.txt >> direct.json
          echo ']}]}' >> direct.json
          rm temp_full.txt temp_suffix.txt

      - name: Generate proxy.json file
        run: |
          curl -sSL ${Loyalsoldier_proxy} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(full:)([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "  \"$2\",\n"' > temp_full.txt
          curl -sSL ${Loyalsoldier_proxy} | grep -Ev "^(regexp|keyword|full):" | perl -ne '/^(domain:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "  \"$2\",\n"' > temp_suffix.txt
          sed -i '$ s/,$//' temp_full.txt
          sed -i '$ s/,$//' temp_suffix.txt
          echo '{"version": 1, "rules": [{' > proxy.json
          echo '"domain": [' >> proxy.json
          cat temp_full.txt >> proxy.json
          echo '],' >> proxy.json
          echo '"domain_suffix": [' >> proxy.json
          cat temp_suffix.txt >> proxy.json
          echo ']}]}' >> proxy.json
          rm temp_full.txt temp_suffix.txt

      - name: Generate reject.json file
        run: |
          curl -sSL ${Loyalsoldier_reject} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "  \"$2\",\n"' > temp.txt
          sed -i '$ s/,$//' temp.txt
          echo '{"version": 1, "rules": [{"domain_suffix": [' > reject.json
          cat temp.txt >> reject.json
          echo ']}]}' >> reject.json
          rm temp.txt

      - name: Generate gfw.json file
        run: |
          curl -sSL ${Loyalsoldier_gfw} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "  \"$2\",\n"' > temp.txt
          sed -i '$ s/,$//' temp.txt
          echo '{"version": 1, "rules": [{"domain_suffix": [' > gfw.json
          cat temp.txt >> gfw.json
          echo ']}]}' >> gfw.json
          rm temp.txt

      - name: Generate greatfire.json file
        run: |
          curl -sSL ${Loyalsoldier_greatfire} | grep -Ev "^(regexp|keyword):" | perl -ne '/^(domain:|full:)?([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "  \"$2\",\n"' > temp.txt
          sed -i '$ s/,$//' temp.txt
          echo '{"version": 1, "rules": [{"domain_suffix": [' > greatfire.json
          cat temp.txt >> greatfire.json
          echo ']}]}' >> greatfire.json
          rm temp.txt

      - name: Generate tld-not-cn.json file
        run: |
          curl -sSL "${custom_tld_not_cn}" | perl -ne '/^domain:([-_a-zA-Z0-9]+(\.[-_a-zA-Z0-9]+)*)/ && print "  \"$1\",\n"' > temp.txt
          sed -i '$ s/,$//' temp.txt
          echo '{"version": 1, "rules": [{"domain_suffix": [' > tld-not-cn.json
          cat temp.txt >> tld-not-cn.json
          echo ']}]}' >> tld-not-cn.json
          rm temp.txt

      - name: Generate cncidr.json file
        run: |
          curl -sSL ${cn_cidr} | perl -ne '/(.+\/\d+)/ && print "  \"$1\",\n"' > temp.txt
          sed -i '$ s/,$//' temp.txt
          echo '{"version": 1, "rules": [{"ip_cidr": [' > cncidr.json
          cat temp.txt >> cncidr.json
          echo ']}]}' >> cncidr.json
          rm temp.txt

      - name: Generate telegramcidr.json file
        run: |
          curl -sSL ${telegram_cidr} | perl -ne '/(.+\/\d+)/ && print "  \"$1\",\n"' > temp.txt
          sed -i '$ s/,$//' temp.txt
          echo '{"version": 1, "rules": [{"ip_cidr": [' > telegramcidr.json
          cat temp.txt >> telegramcidr.json
          echo ']}]}' >> telegramcidr.json
          rm temp.txt

      - name: Generate lancidr.json file
        run: |
          curl -sSL ${lan_cidr} | perl -ne '/(.+\/\d+)/ && print "  \"$1\",\n"' > temp.txt
          sed -i '$ s/,$//' temp.txt
          echo '{"version": 1, "rules": [{"ip_cidr": [' > lancidr.json
          cat temp.txt >> lancidr.json
          echo ']}]}' >> lancidr.json
          rm temp.txt

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          cp *.json ./publish/

      - name: Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
